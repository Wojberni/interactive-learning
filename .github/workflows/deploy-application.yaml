name: Build and deploy application
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: 'maven'
      - name: Build with Maven
        run: mvn clean install
      - name: Persist specification file
        uses: actions/upload-artifact@v3
        with:
          name: apispec
          path: ./backend/application/target/apispec.json
      - name: Build and publish backend Docker image to Github Packages Registry
        uses: elgohr/Publish-Docker-Github-Action@v4
        with:
          context: backend
          name: wojberni/interactive-learning/interactive-learning-backend
          registry: ghcr.io
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.GITHUB_TOKEN }}
          dockerfile: ./backend/Dockerfile
          tags: latest

  build-mobile-web:
    needs: build-backend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./mobile

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: 'maven'
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.3.4'
      - run: flutter --version
      - name: Download api specification
        uses: actions/download-artifact@v2
        with:
          name: apispec
      - name: Setup application
        run: ./setup.sh ../apispec.json
      - name: Build web application
        run: flutter build web
      - name: Build and publish backend Docker image to Github Packages Registry
        uses: elgohr/Publish-Docker-Github-Action@v4
        with:
          context: mobile
          name: wojberni/interactive-learning/interactive-learning-mobile-web
          registry: ghcr.io
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.GITHUB_TOKEN }}
          dockerfile: ./mobile/Dockerfile
          tags: latest

  deploy-backend:
    needs: build-backend
    runs-on: ubuntu-latest

    steps:
      - name: Deploy image to server
        uses: appleboy/ssh-action@master
        env:
          GITHUB_USERNAME: ${{ secrets.USERNAME }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DB_URL: ${{ secrets.DB_URL }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          port: ${{ secrets.DEPLOY_PORT }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          envs: GITHUB_USERNAME, GITHUB_TOKEN, DB_URL, DB_USERNAME, DB_PASSWORD, JWT_SECRET
          script: |
            docker login ghcr.io -u $GITHUB_USERNAME -p $GITHUB_TOKEN
            docker pull ghcr.io/wojberni/interactive-learning/interactive-learning-backend:latest
            docker stop interactive-learning-backend
            docker system prune -f
            docker run --name interactive-learning-backend \
            -e APP_DATABASE_URL=$DB_URL -e APP_DATABASE_USERNAME=$DB_USERNAME -e APP_DATABASE_PASSWORD=$DB_PASSWORD -e APP_JWT_TOKEN_SECRET=$JWT_SECRET \
            -dit -p 8080:8080 ghcr.io/wojberni/interactive-learning/interactive-learning-backend:latest

  deploy-mobile-web:
    needs: build-backend
    runs-on: ubuntu-latest

    steps:
      - name: Deploy image to server
        uses: appleboy/ssh-action@master
        env:
          GITHUB_USERNAME: ${{ secrets.USERNAME }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DB_URL: ${{ secrets.DB_URL }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          port: ${{ secrets.DEPLOY_PORT }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          envs: GITHUB_USERNAME, GITHUB_TOKEN
          script: |
            docker login ghcr.io -u $GITHUB_USERNAME -p $GITHUB_TOKEN
            docker pull ghcr.io/wojberni/interactive-learning/interactive-learning-mobile-web:latest
            docker stop interactive-learning-mobile-web
            docker system prune -f
            docker run --name interactive-learning-mobile-web \
            -dit -p 2137:80 ghcr.io/wojberni/interactive-learning/interactive-learning-mobile-web:latest